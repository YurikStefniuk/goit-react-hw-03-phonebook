{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/Layout/Layout.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","alert","props","onAddContact","this","className","onSubmit","htmlFor","type","id","onChange","Component","defaultProps","Layout","children","Filter","onChangeFilter","ContactList","contacts","onRemoveContact","map","onClick","App","filter","addContact","contact","uuidv4","find","item","toLowerCase","prevState","removeContact","contactId","changeFilter","getVisibleContacts","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c417de91.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactForm.css';\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    };\n\n    static propTypes = {\n        onAddContact: PropTypes.func,\n    };\n\n    static defaultProps = {};\n\n    handleChange = e => {\n        const { name, value } = e.target;\n            this.setState({\n                [name]: value,\n            });\n    };\n\n    handleSubmit = e => {\n        const { name, number } = this.state;\n        e.preventDefault();\n\n        if (name === '' || number === '') {\n            alert('Enter the data.');\n            } else {\n                this.props.onAddContact(name, number);\n                this.setState({\n                    name: '',\n                    number: ''\n            });\n        }\n    };\n    \n    render() {\n        const { name, number } = this.state;\n        return (\n            <div>\n                <form\n                    className=\"Form\"\n                    onSubmit={this.handleSubmit} >\n                    \n                    <label\n                            htmlFor=\"name\"\n                            className=\"Label\">Name</label>\n                    \n                    <input\n                        type=\"text\"\n                        value={name}\n                        id=\"name\"\n                        className=\"Input\"\n                        onChange={this.handleChange}\n                        name=\"name\"\n                    />\n            \n                    <label\n                        htmlFor=\"number\"\n                        className=\"Label\">Number</label>\n                    <input\n                        type=\"number\"\n                        value={number}\n                        id=\"number\"\n                        className=\"Input\"\n                        onChange={this.handleChange}\n                        name=\"number\"\n                    />\n                    \n                    <button type=\"submit\">\n                      Add contact\n                    </button>\n                 </form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Layout.css';\n\nconst Layout = ({ children }) =>\n        <div className=\"Layout\">{children}</div>;\n\nexport default Layout;","import './Filter.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({value, onChangeFilter}) => (\n    <div className=\"FindForm\">\n        <label htmlFor=\"find\"\n            className=\"FindLabel\">\n            Find contact by name\n        </label>\n        <input\n            type=\"text\"\n            value={value}\n            id=\"find\"\n            className=\"FindInput\"\n            onChange={e => onChangeFilter(e.target.value)}\n        />\n    </div>\n)\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n\nexport default Filter;","import './ContactList.css';\nimport PropTypes from 'prop-types';\n\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n    <div>\n        <ul>\n            {contacts.map(({ id, name, number }) => (\n                <li\n                    key={id}\n                    className=\"ContactItem\">\n                    - {name}: {number}\n                    <button\n                        type=\"button\"\n                        onClick={() => onRemoveContact(id)}>\n                        Delete\n                    </button>\n                </li>\n            ))}\n        </ul>\n        \n    </div>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ContactList;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Layout from './Components/Layout/Layout';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList/ContactList';\n\nexport default class App extends Component {\n\n    static propTypes = {};\n\n    static defaultProps = {};\n\n    state = {\n        contacts: [\n            // {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n            // {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n            // {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n            // {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}, \n        ],\n        filter: ''\n    };\n\n    addContact = (name, number) => {\n       const contact = {\n       id: uuidv4(),\n       name,\n       number\n       };\n  \n          if (this.state.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\n            alert(`${name} is already in contacts.`);\n        } else {\n            this.setState(prevState => {\n                return {\n                    contacts: [...prevState.contacts, contact],\n                };\n            });\n        };\n\n    };\n    \n    removeContact = contactId => {\n        this.setState(prevState => {\n            return {\n                contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n            };\n        });\n    };\n\n    changeFilter = filter => {\n        this.setState({ filter });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    componentDidMount() {\n        // console.log(prevState);\n        // console.log(this.state);\n\n        const contacts = localStorage.getItem('contacts');\n        const parsedContacts = JSON.parse(contacts);\n        \n        if (parsedContacts) {\n            this.setState({contacts: parsedContacts});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(prevState);\n        console.log(this.state.contacts);\n        \n        if (this.state.contacts !== prevState.contacts) {\n            console.log('Обновилось поле contacts');\n\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n  \n    render() {\n        const { contacts, filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n        return ( \n            <Layout>\n                <h1>Phonebook</h1>\n                <ContactForm onAddContact={this.addContact} /> \n                {contacts.length > 0 && (\n                    <>\n                <h2>Contacts</h2>\n                {/* )} */}\n                 {contacts.length > 1 && (\n                    <Filter\n                        value={filter}\n                        onChangeFilter={this.changeFilter} />\n                )}\n                {/* {contacts.length > 0 && ( */}\n                    <ContactList\n                        contacts={visibleContacts}\n                        onRemoveContact={this.removeContact}/>\n                    </>\n                )} \n            </Layout>\n        );\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}